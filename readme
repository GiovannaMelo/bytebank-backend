## Tech Challenge 2 - Sistema Banc√°rio

Sistema banc√°rio completo com funcionalidades de usu√°rio, conta, cart√£o e transa√ß√µes financeiras.

### üöÄ Funcionalidades

- ‚úÖ Autentica√ß√£o de usu√°rios com JWT
- ‚úÖ Gerenciamento de contas banc√°rias
- ‚úÖ Cart√µes de cr√©dito/d√©bito
- ‚úÖ Transa√ß√µes financeiras (cr√©dito/d√©bito)
- ‚úÖ Extrato banc√°rio
- ‚úÖ Documenta√ß√£o autom√°tica com Swagger
- ‚úÖ Valida√ß√£o de dados com Joi
- ‚úÖ Tratamento centralizado de erros
- ‚úÖ MongoDB com Mongoose

### üõ†Ô∏è Tecnologias

- **Backend**: Node.js + Express
- **Banco de Dados**: MongoDB + Mongoose
- **Autentica√ß√£o**: JWT (JSON Web Token)
- **Valida√ß√£o**: Joi
- **Documenta√ß√£o**: Swagger
- **Containeriza√ß√£o**: Docker

### üì¶ Instala√ß√£o e Execu√ß√£o

#### Com Docker
```bash
# Construir a imagem
docker build -t tech-challenge .

# Executar o container
docker run -p 3001:3001 tech-challenge
```

#### Sem Docker
```bash
# Instalar depend√™ncias
npm install

# Executar em desenvolvimento
npm run dev

# Executar em produ√ß√£o
npm start
```


### Importando collection no postman
- Neste projeto possui o arquivo tech-challenge-2.postman_collection que √© uma collection do postman, voc√™ tendo o postman pode clicar no bot√£o de import e selecionar esse arquivo l√° na caixa de drop,
ap√≥s realizar a importa√ß√£o voc√™ ter√° todo os Requests desse projeto.

![alt text](image.png)

![alt text](image-1.png)


### Swagger

para acessar o Swagger basta voc√™ entrar na rota /docs
as rotas que necessitam de Autentica√ß√£o voc√™ pode colar o Bearer token no cadeado

### Autenticando 

#### Criando usu√°rio
    "http:localhost:3001/user"
    body:
        {
            "username": "Aluno Carequinha",
            "email": "teste@gmail.com",
            "password": "testes"
        }  

    cURL
    ``` 
        curl --location 'localhost:3001/user' \
        --header 'Content-Type: application/json' \
        --data-raw '{
            "username": "Aluno Carequinha",
            "email": "teste@gmail.com",
            "password": "testes"
        }'
    ```

    returno:

    ```
    {
        "message": "usu√°rio criado com sucesso",
        "result": {
            "username": "Aluno Carequinha",
            "email": "teste@gmail.com",
            "password": "testes",
            "id": "67607133f840bb97892eb657"
        }
    }
    ```

#### Autenticando
    "localhost:3001/user/auth"
    Body: 
        {
            "email": "teste@gmail.com",
            "password": "testes"
        }
    cURL
    ```
        curl --location 'localhost:3001/user/auth' \
        --header 'Content-Type: application/json' \
        --data-raw '{
            "email": "teste@gmail.com",
            "password": "testes"
        }'
    ```

    retorno
    ```
        {
            "message": "Usu√°rio autenticado com sucesso",
            "result": {
                "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IklzcmFlbCAyIiwiZW1haWwiOiJ0ZXN0ZUBnbWFpbC5jb20iLCJwYXNzd29yZCI6InRlc3RlcyIsImlkIjoiNjc2MDcxMzNmODQwYmI5Nzg5MmViNjU3IiwiaWF0IjoxNzM0MzczNjg4LCJleHAiOjE3MzQ0MTY4ODh9.jtaRKSifN_j7rFWn1KkH5fykecwhXFW0G4wLqj24I-k"
            }
        }
    ```

    Esse Token deve user usado para realizar as chamadas das outras apis

### Conta

#### Criando conta
    POST localhost:3001/account

    Authorization Bearer {{Token}}

    Body:
    ```json
    {
        "type": "Debit",
        "name": "Conta Principal",
        "description": "Conta corrente para uso di√°rio",
        "initialBalance": 1000
    }
    ```

    Exemplos de tipos de conta:
    - Debit: Conta corrente
    - Credit: Cart√£o de cr√©dito
    - Savings: Conta poupan√ßa
    - Investment: Conta de investimento

    cURL
    ```
        curl --location 'localhost:3001/account' \
        --header 'Content-Type: application/json' \
        --header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IklzcmFlbCAyIiwiZW1haWwiOiJ0ZXN0ZUBnbWFpbC5jb20iLCJwYXNzd29yZCI6InRlc3RlcyIsImlkIjoiNjc2MDcxMzNmODQwYmI5Nzg5MmViNjU3IiwiaWF0IjoxNzM0MzczNjg4LCJleHAiOjE3MzQ0MTY4ODh9.jtaRKSifN_j7rFWn1KkH5fykecwhXFW0G4wLqj24I-k' \
        --data '{
            "type": "Debit",
            "name": "Conta Principal",
            "description": "Conta corrente para uso di√°rio",
            "initialBalance": 1000
        }'
    ```

    Retorno
    ```json
    {
        "message": "Conta criada com sucesso",
        "result": {
            "id": "67607133f840bb97892eb659",
            "type": "Debit",
            "userId": "67607133f840bb97892eb657",
            "name": "Conta Principal",
            "description": "Conta corrente para uso di√°rio",
            "initialBalance": 1000,
            "createdAt": "2024-12-16T18:29:08.734Z"
        }
    }
    ```

    Retorno quando h√° saldo inicial (transa√ß√£o de abertura criada automaticamente):
    ```json
    {
        "message": "Conta criada com sucesso",
        "result": {
            "id": "67607133f840bb97892eb659",
            "type": "Debit",
            "userId": "67607133f840bb97892eb657",
            "name": "Conta Principal",
            "description": "Conta corrente para uso di√°rio",
            "initialBalance": 1000,
            "createdAt": "2024-12-16T18:29:08.734Z"
        }
    }
    ```

#### Buscando conta
    "localhost:3001/account"

    Authorization: Bearer {{Token}}

    cURL
    ```
        curl --location 'localhost:3001/account' \
        --header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IklzcmFlbCAyIiwiZW1haWwiOiJ0ZXN0ZUBnbWFpbC5jb20iLCJwYXNzd29yZCI6InRlc3RlcyIsImlkIjoiNjc2MDcxMzNmODQwYmI5Nzg5MmViNjU3IiwiaWF0IjoxNzM0MzczNjg4LCJleHAiOjE3MzQ0MTY4ODh9.jtaRKSifN_j7rFWn1KkH5fykecwhXFW0G4wLqj24I-k'
    ```
    Retorno
    ```
        {
            "message": "Conta encontrada carregado com sucesso",
            "result": {
                "account": [
                    {
                        "id": "67607133f840bb97892eb659",
                        "type": "Debit",
                        "userId": "67607133f840bb97892eb657"
                    }
                ],
                "transactions": [
                    {
                        "id": "67607174f840bb97892eb669",
                        "accountId": "67607133f840bb97892eb659",
                        "type": "Debit",
                        "value": -200,
                        "date": "2024-12-16T18:29:08.734Z"
                    },
                    {
                        "id": "67607174f840bb97892eb669",
                        "accountId": "67607133f840bb97892eb659",
                        "type": "Credit",
                        "value": 200,
                        "from": "text",
                        "to": "text",
                        "anexo": "text",
                        "date": "2024-12-16T18:29:08.734Z"
                    }
                ],
                "cards": [
                    {
                        "id": "67607133f840bb97892eb65b",
                        "accountId": "67607133f840bb97892eb659",
                        "type": "Debit",
                        "is_blocked": false,
                        "number": "13748712374891010",
                        "dueDate": "2027-01-07T00:00:00.000Z",
                        "functions": "Debit",
                        "cvc": "505",
                        "paymentDate": null,
                        "name": "Carequinha"
                    }
                ]
            }
        }
    ```

#### Criando Transa√ß√£o
    "localhost:3001/account/transaction"

    Body

        {
            "accountId": "67607133f840bb97892eb659",
            "description": "Sal√°rio mensal",
            "amount": 5000,
            "type": "income", // income | expense
            "category": "Sal√°rio",
            "account": "Conta Principal",
            "notes": "Sal√°rio do m√™s de dezembro",
            "tags": ["sal√°rio", "renda"],
            "anexo": "comprovante.pdf"
        }

    Exemplo de despesa:
        {
            "accountId": "67607133f840bb97892eb659",
            "description": "Compras no supermercado",
            "amount": 150.50,
            "type": "expense",
            "category": "Alimenta√ß√£o",
            "account": "Cart√£o de Cr√©dito",
            "notes": "Compras semanais",
            "tags": ["alimenta√ß√£o", "supermercado"],
            "anexo": "nota-fiscal.pdf"
        }

    cURL
    ```
        curl --location 'localhost:3001/account/transaction' \
        --header 'Content-Type: application/json' \
        --header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IklzcmFlbCAyIiwiZW1haWwiOiJ0ZXN0ZUBnbWFpbC5jb20iLCJwYXNzd29yZCI6InRlc3RlcyIsImlkIjoiNjc2MDcxMzNmODQwYmI5Nzg5MmViNjU3IiwiaWF0IjoxNzM0MzczNjg4LCJleHAiOjE3MzQ0MTY4ODh9.jtaRKSifN_j7rFWn1KkH5fykecwhXFW0G4wLqj24I-k' \
        --data '{
            "accountId": "67607133f840bb97892eb659",
            "description": "Sal√°rio mensal",
            "amount": 5000,
            "type": "income",
            "category": "Sal√°rio",
            "notes": "Sal√°rio do m√™s de dezembro",
            "tags": ["sal√°rio", "renda"]
        }'
    ```

    Retorno
        {
            "id": "67607174f840bb97892eb669",
            "userId": "67607133f840bb97892eb657",
            "accountId": "67607133f840bb97892eb659",
            "description": "Sal√°rio mensal",
            "amount": 5000,
            "type": "income",
            "category": "Sal√°rio",
            "account": "Conta Principal",
            "notes": "Sal√°rio do m√™s de dezembro",
            "tags": ["sal√°rio", "renda"],
            "anexo": "comprovante.pdf",
            "date": "2024-12-16T18:29:08.734Z"
        }

#### Buscando transa√ß√£o por ID
    GET localhost:3001/account/transaction/{{transactionId}}

    Authorization Bearer {{Token}}

    Params:
        transactionId (obrigat√≥rio) - ID da transa√ß√£o

    Exemplo:
        localhost:3001/account/transaction/67607174f840bb97892eb669

    cURL
    ```
        curl --location 'localhost:3001/account/transaction/67607174f840bb97892eb669' \
        --header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IklzcmFlbCAyIiwiZW1haWwiOiJ0ZXN0ZUBnbWFpbC5jb20iLCJwYXNzd29yZCI6InRlc3RlcyIsImlkIjoiNjc2MDcxMzNmODQwYmI5Nzg5MmViNjU3IiwiaWF0IjoxNzM0MzczNjg4LCJleHAiOjE3MzQ0MTY4ODh9.jtaRKSifN_j7rFWn1KkH5fykecwhXFW0G4wLqj24I-k'
    ```

    Retorno
    ```json
    {
        "message": "Transa√ß√£o carregada com sucesso",
        "result": {
            "transaction": {
                "id": "67607174f840bb97892eb669",
                "userId": "67607133f840bb97892eb657",
                "accountId": "67607133f840bb97892eb659",
                "description": "Sal√°rio mensal",
                "amount": 5000,
                "type": "income",
                "category": "Sal√°rio",
                "account": "Conta Principal",
                "notes": "Sal√°rio do m√™s de dezembro",
                "tags": ["sal√°rio", "renda"],
                "anexo": "comprovante.pdf",
                "date": "2024-12-16T18:29:08.734Z"
            }
        }
    }
    ```

    Retorno quando n√£o encontrada:
    ```json
    {
        "message": "Transa√ß√£o n√£o encontrada",
        "result": null
        }

#### Atualizando transa√ß√£o
    PUT localhost:3001/account/transaction/{{transactionId}}

    Authorization Bearer {{Token}}

    Body (campos opcionais - apenas os que deseja atualizar):
    ```json
    {
        "description": "Sal√°rio mensal atualizado",
        "amount": 5500,
        "type": "income",
        "category": "Sal√°rio",
        "account": "Conta Principal",
        "notes": "Sal√°rio do m√™s de dezembro com reajuste",
        "tags": ["sal√°rio", "renda", "reajuste"],
        "anexo": "novo-comprovante.pdf"
    }
    ```

    cURL
    ```
        curl --location --request PUT 'localhost:3001/account/transaction/67607174f840bb97892eb669' \
        --header 'Content-Type: application/json' \
        --header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IklzcmFlbCAyIiwiZW1haWwiOiJ0ZXN0ZUBnbWFpbC5jb20iLCJwYXNzd29yZCI6InRlc3RlcyIsImlkIjoiNjc2MDcxMzNmODQwYmI5Nzg5MmViNjU3IiwiaWF0IjoxNzM0MzczNjg4LCJleHAiOjE3MzQ0MTY4ODh9.jtaRKSifN_j7rFWn1KkH5fykecwhXFW0G4wLqj24I-k' \
        --data '{
            "description": "Sal√°rio mensal atualizado",
            "amount": 5500,
            "category": "Sal√°rio",
            "notes": "Sal√°rio do m√™s de dezembro com reajuste"
        }'
        
    **Nota**: Na atualiza√ß√£o, n√£o √© necess√°rio enviar `accountId` - apenas os campos que deseja atualizar.
    ```

    Retorno
    ```json
    {
        "message": "Transa√ß√£o atualizada com sucesso",
        "result": {
            "id": "67607174f840bb97892eb669",
            "userId": "67607133f840bb97892eb657",
            "accountId": "67607133f840bb97892eb659",
            "description": "Sal√°rio mensal atualizado",
            "amount": 5500,
            "type": "income",
            "category": "Sal√°rio",
            "account": "Conta Principal",
            "notes": "Sal√°rio do m√™s de dezembro com reajuste",
            "tags": ["sal√°rio", "renda", "reajuste"],
            "anexo": "novo-comprovante.pdf",
            "date": "2024-12-16T18:29:08.734Z"
        }
    }
    ```

#### Excluindo transa√ß√£o
    DELETE localhost:3001/account/transaction/{{transactionId}}

    Authorization Bearer {{Token}}

    Params:
        transactionId (obrigat√≥rio) - ID da transa√ß√£o

    Exemplo:
        DELETE localhost:3001/account/transaction/67607174f840bb97892eb669

    cURL
    ```
        curl --location --request DELETE 'localhost:3001/account/transaction/67607174f840bb97892eb669' \
        --header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IklzcmFlbCAyIiwiZW1haWwiOiJ0ZXN0ZUBnbWFpbC5jb20iLCJwYXNzd29yZCI6InRlc3RlcyIsImlkIjoiNjc2MDcxMzNmODQwYmI5Nzg5MmViNjU3IiwiaWF0IjoxNzM0MzczNjg4LCJleHAiOjE3MzQ0MTY4ODh9.jtaRKSifN_j7rFWn1KkH5fykecwhXFW0G4wLqj24I-k'
    ```

    Retorno
    ```json
    {
        "message": "Transa√ß√£o exclu√≠da com sucesso",
        "result": {
            "deletedTransaction": {
                "id": "67607174f840bb97892eb669",
                "userId": "67607133f840bb97892eb657",
                "accountId": "67607133f840bb97892eb659",
                "description": "Sal√°rio mensal",
                "amount": 5000,
                "type": "income",
                "category": "Sal√°rio",
                "date": "2024-12-16T18:29:08.734Z"
            }
        }
    }
    ```

    Retorno quando n√£o encontrada:
    ```json
    {
        "message": "Transa√ß√£o n√£o encontrada",
        "result": null
    }
    ```

#### Buscando extrato com pagina√ß√£o
    localhost:3001/account/{{accountId}}/statement

    Authorization Bearer {{Token}}
    Params:
        accountId (obrigat√≥rio)
        page (opcional, padr√£o: 1)
        limit (opcional, padr√£o: 10, m√°ximo: 100)
        sort (opcional, padr√£o: date) - campos: date, amount, description, type, category
        order (opcional, padr√£o: desc) - valores: asc, desc

    Exemplos:
        # Primeira p√°gina com 10 itens
        localhost:3001/account/{{accountId}}/statement

        # Segunda p√°gina com 5 itens
        localhost:3001/account/{{accountId}}/statement?page=2&limit=5

        # Ordenado por valor (maior para menor)
        localhost:3001/account/{{accountId}}/statement?sort=amount&order=desc

        # Ordenado por data (mais antiga primeiro)
        localhost:3001/account/{{accountId}}/statement?sort=date&order=asc

    ```
        curl --location 'localhost:3001/account/67607133f840bb97892eb659/statement' \
        --header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IklzcmFlbCAyIiwiZW1haWwiOiJ0ZXN0ZUBnbWFpbC5jb20iLCJwYXNzd29yZCI6InRlc3RlcyIsImlkIjoiNjc2MDcxMzNmODQwYmI5Nzg5MmViNjU3IiwiaWF0IjoxNzM0MzczNjg4LCJleHAiOjE3MzQ0MTY4ODh9.jtaRKSifN_j7rFWn1KkH5fykecwhXFW0G4wLqj24I-k'
    ```

    Retorno
        {
            "message": "Extrato carregado com sucesso",
            "result": {
                "transactions": [
                    {
                        "id": "67607171f840bb97892eb665",
                        "userId": "67607133f840bb97892eb657",
                        "accountId": "67607133f840bb97892eb659",
                        "description": "Sal√°rio mensal",
                        "amount": 5000,
                        "type": "income",
                        "category": "Sal√°rio",
                        "date": "2024-12-16T18:29:05.170Z"
                    },
                    {
                        "id": "67607172f840bb97892eb667",
                        "userId": "67607133f840bb97892eb657",
                        "accountId": "67607133f840bb97892eb659",
                        "description": "Compras no supermercado",
                        "amount": 150.50,
                        "type": "expense",
                        "category": "Alimenta√ß√£o",
                        "date": "2024-12-16T18:29:06.250Z"
                    }
                ],
                "pagination": {
                    "currentPage": 1,
                    "totalPages": 3,
                    "totalItems": 25,
                    "itemsPerPage": 10,
                    "hasNextPage": true,
                    "hasPrevPage": false,
                    "nextPage": 2,
                    "prevPage": null
                },
                "filters": {
                    "sort": "date",
                    "order": "desc"
                }
            }
        }

## Dashboard

### Resumo Geral da Conta
    GET localhost:3001/dashboard/summary

    Authorization Bearer {{Token}}

    Retorno:
    ```json
    {
        "message": "Resumo da conta carregado com sucesso",
        "result": {
            "totalIncome": 15000,
            "totalExpense": 8500,
            "balance": 6500,
            "transactionCount": 45,
            "monthlyData": [
                {
                    "month": "2024-01",
                    "income": 5000,
                    "expense": 3000,
                    "balance": 2000,
                    "count": 15
                }
            ],
            "categoryBreakdown": [
                {
                    "category": "Sal√°rio",
                    "income": 12000,
                    "expense": 0,
                    "total": 12000,
                    "count": 12
                }
            ]
        }
    }
    ```

### Evolu√ß√£o do Saldo
    GET localhost:3001/dashboard/balance-evolution?months=6

    Authorization Bearer {{Token}}

    Params:
        months (opcional, padr√£o: 6) - N√∫mero de meses para analisar

    Retorno:
    ```json
    {
        "message": "Evolu√ß√£o do saldo carregada com sucesso",
        "result": {
            "balanceEvolution": [
                {
                    "date": "2024-01-15T10:30:00.000Z",
                    "balance": 5000,
                    "transactionId": "123",
                    "description": "Sal√°rio mensal"
                }
            ],
            "monthlyBalance": [
                {
                    "month": "2024-01",
                    "balance": 2000
                }
            ]
        }
    }
    ```

### Top Categorias de Gastos
    GET localhost:3001/dashboard/top-expense-categories?limit=5

    Authorization Bearer {{Token}}

    Params:
        limit (opcional, padr√£o: 5) - N√∫mero de categorias para retornar

    Retorno:
    ```json
    {
        "message": "Top categorias carregadas com sucesso",
        "result": {
            "topCategories": [
                {
                    "category": "Alimenta√ß√£o",
                    "total": 2500
                },
                {
                    "category": "Transporte",
                    "total": 1200
                }
            ]
        }
    }
    ```

### Transa√ß√µes Recentes
    GET localhost:3001/dashboard/recent-transactions?limit=10

    Authorization Bearer {{Token}}

    Params:
        limit (opcional, padr√£o: 10) - N√∫mero de transa√ß√µes para retornar

    Retorno:
    ```json
    {
        "message": "Transa√ß√µes recentes carregadas com sucesso",
        "result": {
            "recentTransactions": [
                {
                    "id": "123",
                    "description": "Compras no supermercado",
                    "amount": 150.50,
                    "type": "expense",
                    "category": "Alimenta√ß√£o",
                    "date": "2024-01-15T10:30:00.000Z"
                }
            ]
        }
    }
    ```

### Estat√≠sticas por Per√≠odo
    GET localhost:3001/dashboard/period-stats?period=month

    Authorization Bearer {{Token}}

    Params:
        period (opcional, padr√£o: month) - Per√≠odo: month, quarter, year

    Retorno:
    ```json
    {
        "message": "Estat√≠sticas do per√≠odo carregadas com sucesso",
        "result": {
            "periodStats": {
                "income": 5000,
                "expense": 3000,
                "balance": 2000,
                "transactionCount": 25,
                "averageTransaction": 320
            }
        }
    }
    ```